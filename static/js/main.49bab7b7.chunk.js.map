{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","concat","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","react_default","a","createElement","oncClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","onClick","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","_useState","useState","_useState2","Object","slicedToArray","didLookup","setDidLookup","_useState3","_useState4","profile","setProfile","_useState5","_useState6","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","_wrapRegExp","tweetid","urlTweetId","groups","isDetail","handlePerformAction","newActionTweet","content","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","_useState7","_useState8","tweetsDidSet","setTweetsDidSet","final","toConsumableArray","newTweets","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","assign","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","src_App","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.49bab7b7.chunk.js","sourcesContent":["function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n  let jsonData;\r\n  if (data){\r\n    jsonData= JSON.stringify(data)\r\n  }\r\n    const xhr = new XMLHttpRequest()\r\n    const url=`http://localhost:8000/api${endpoint}`\r\n    xhr.responseType=\"json\"\r\n    const csrftoken= getCookie('csrftoken');\r\n    xhr.open(method,url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    if (csrftoken){\r\n      // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    xhr.onload = function() {\r\n      if (xhr.status === 403){\r\n        const detail=xhr.response.detail\r\n        if (detail === \"Authentication credentials were not provided.\"){\r\n          if(window.location.href.indexOf(\"login\") === -1){\r\n            window.location.href=\"/login?showLoginRequired=true\"\r\n          }\r\n        }\r\n      }\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror= function (e) {\r\n      console.log(e)\r\n      callback({\"message\": \"the request was an error\"}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n  }\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet,callback){\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback,{content:newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action,callback){\r\n  const data={id:tweetId, action:action}\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback,data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId,callback){\r\n  backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username,callback, nextUrl){\r\n  let endpoint=\"/tweets/\"\r\n  if (username){\r\n    endpoint= `/tweets/?username=${username}`\r\n  }\r\n  if(nextUrl != null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback)\r\n}\r\n","import React from 'react'\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props){\r\n  const {tweet,action,didPerformAction} = props\r\n  const likes = tweet.likes ? tweet.likes : 0\r\n  const className = props.className ? props.className : 'btn btn-primary btn-sum'\r\n  const actionDisplay = action.display ? action.display : 'Action'\r\n  const handleActionBackendEvent = (response,status) =>{\r\n    if ((status === 200 || status === 201) && didPerformAction){\r\n      didPerformAction(response,status)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n   event.preventDefault()\r\n   apiTweetAction(tweet.id,action.type,handleActionBackendEvent)\r\n\r\n}\r\n  const display = action.type === 'like' ? `${likes}  ${actionDisplay}` : actionDisplay\r\n  return <button className={className} oncClick={handleClick}>{display}</button>\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href= `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n  </span>\r\n}\r\n\r\n\r\nexport  function UserDisplay(props){\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport  function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n</span>\r\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}\r\n","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n  }\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    // lookup\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response)\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      if (didLookup === false){\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\r\n            // console.log(response, status)\r\n            if (status===200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n\r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\r\n}\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}\r\n","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay,\r\n  UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      return <div className={className}>\r\n         {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n\r\n        <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n              <div>\r\n\r\n                <p>\r\n                  <UserDisplay includeFullName user={tweet.user} />\r\n                </p>\r\n                <p>{tweet.content}</p>\r\n\r\n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n              </div>\r\n          <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n                </div>\r\n      </div>\r\n      </div>\r\n    }\r\n","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef= React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) =>{\r\n    if (status === 201){\r\n      didTweet(response)\r\n    }else{\r\n      alert(\"An error occured.\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit=(event) => {\r\n    event.preventDefault()\r\n    const newVal= textAreaRef.current.value\r\n    apiTweetCreate(newVal,handleBackendUpdate)\r\n    textAreaRef.current.value= ''\r\n  }\r\nreturn <div className={props.className}>\r\n  <form onSubmit={handleSubmit}>\r\n  <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n  </textarea>\r\n  <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n </form>\r\n </div>\r\n}\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n\r\n\r\n\r\n\r\n// import React, {useEffect, useState} from 'react'\r\n// import {apiTweetList} from './lookup'\r\n// import {Tweet} from './detail'\r\n//\r\n// export function TweetsList(props) {\r\n//   const [tweetsInit, setTweetsInit] = useState([])\r\n//   const [tweets, setTweets] = useState([])\r\n//   const [tweetsDidSet, setTweetsDidSet]=useState(false)\r\n//\r\n//   useEffect(() => {\r\n//     const final= [...props.newTweets].concat(tweetsInit)\r\n//     if(final.length !== tweets.length){\r\n//       setTweets(final)\r\n//     }\r\n//   }, [props.newTweets, tweets,tweetsInit])\r\n//\r\n//   useEffect(() => {\r\n//     if(tweetsDidSet === false){\r\n//     const handleTweetListLookup= (response, status) => {\r\n//       if(status === 200){\r\n//       setTweetsInit(response.results)\r\n//       setTweetsDidSet(true)\r\n//     }else{\r\n//       alert('There was an error.')\r\n//     }\r\n//\r\n//     }\r\n//     apiTweetList(props.username,handleTweetListLookup)\r\n//   }\r\n// }, [tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n//\r\n//   const handleDidRetweet =(newTweet) => {\r\n//     const updateTweetsInit = [...tweetsInit]\r\n//     updateTweetsInit.unshift(newTweet)\r\n//     setTweetsInit(updateTweetsInit)\r\n//     const updateFinalTweets = [...tweets]\r\n//     updateFinalTweets.unshift(tweets)\r\n//     setTweets(updateFinalTweets)\r\n//\r\n//   }\r\n//   return tweets.map((item,index)=>{\r\n//     return <Tweet\r\n//        tweet={item}\r\n//        didRetweet={handleDidRetweet}\r\n//        className='my-5 py-5 border bg-white text-dark'\r\n//        key={`${index}-{item.id}`} />\r\n//      })\r\n//    }\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n","import React, {useEffect,useState} from 'react'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\nimport {TweetCreate} from './create'\r\nimport {FeedList} from './feed'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props){\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet= props.canTweet === \"false\" ? false : true\r\n\r\n\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets= [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\nreturn <div className={props.className}>\r\n  {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n <TweetsList newTweets={newTweets} {...props}/>\r\n </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId}= props\r\n  const [didLookup,setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n  const handleBackendLookup = (response,status) => {\r\n    if (status === 200){\r\n      setTweet(response)\r\n    }else {\r\n      alert(\"There was an error.\")\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId,handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId,didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n// function loadTweets(callback){\n//   const xhr = new XMLHttpRequest()\n//   const method= 'GET'\n//   const url=\"http://localhost:8000/api/tweets/\"\n//   const responseType=\"json\"\n//\n//   xhr.responseType=responseType\n//   xhr.open(method, url)\n//   xhr.onload = function() {\n//     callback(xhr.response, xhr.status)\n//   }\n//   xhr.onerror= function(e) {\n//     console.log(e)\n//     callback({\"message\": \"the request was an error\"}, 400)\n//   }\n//   xhr.send()\n// }\n//\n// function TweetsList(props) {\n//   const [tweets, setTweets] = useState([])\n//\n//   useEffect(() => {\n//     const mycallback= (response, status) => {\n//       if(status === 200){\n//       // const tweetItems = [{\"content\":123}, {\"content\":\"Hello World\"}]\n//       setTweets(response)\n//     }\n//\n//     }\n//     loadTweets(mycallback)\n//     const tweetItems = [{\"content\":123}, {\"content\":\"Hello World\"}]\n//     setTweets(tweetItems)\n//   }, [])\n//\n//\n// function ActionBtn(props){\n//   const {tweet,action} = props\n//   const className = props.className ? props.className : 'btn btn-primary btn-sum'\n//   return action.type === 'like' ? <button className={className}> {tweet.likes} Likes</button>:null\n// }\n//\n//\n// function Tweet(props) {\n//   const {tweet}=props\n//   const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n//   return <div className={className}>\n//   <p>{tweet.id} - {tweet.content}</p>\n//   <div className='btn btn-group'>\n//   <ActionBtn tweet={tweet} action={{type : \"like\"}}/>\n//   </div>\n//   </div>\n// }\n//\n// function App() {\n//   const [tweets, setTweets] = useState([])\n//\n// useEffect(() => {\n//   const mycallback= (response, status) => {\n//     if(status === 200){\n//     // const tweetItems = [{\"content\":123}, {\"content\":\"Hello World\"}]\n//     setTweets(response)\n//   }\n//\n//   }\n//   loadTweets(mycallback)\n//   const tweetItems = [{\"content\":123}, {\"content\":\"Hello World\"}]\n//   setTweets(tweetItems)\n// }, [])\n//    return tweets.map((item,index)=>{\n//      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={index-item.id}/>\n//    })\n//  }\n//\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n        <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent,TweetsComponent,TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker'\nimport {ProfileBadgeComponent} from './profiles'\n\n\nconst appEl= document.getElementById('root')\nif (appEl){\n  ReactDOM.render(<App/>,appEl);\n}\n\nconst e =React.createElement\nconst tweetsEl=document.getElementById(\"tweetme-2\")\nif (tweetsEl){\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container=> {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset),\n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}